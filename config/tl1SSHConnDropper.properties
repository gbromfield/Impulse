# This, given a verb and mod1, will initiate a connection disconnect after a delay

# To turn on debugging of all transforms
# transform.*.log4jLogLevel=DEBUG

# To turn on debugging for an individual transform
# transform.<name>.log4jLogLevel=DEBUG

impulse.byteArrayFormatterLimitSize=1024

transform.sshServer.classname=com.grb.impulse.plugins.SSHServer
transform.sshServer.listenPort=12346
transform.sshServer.hostKeyFilename=keys/host.ser
transform.sshServer.autoStart=true
link.out.sshServer.onNewConnection=tunnel.onNewConnection(SSHServer.SshServerClient.client)

# To run, the tunnel's serverIPPort property must be specified, you can
# 1. uncomment the property line below and insert your own ip address and port, or
# 2. specify -Dtransform.tunnel.serverIPPort=xxx.xxx.xxx.xxx:yyyyy on the command line
#transform.tunnel.serverIPPort=192.168.160.128:55555
#transform.tunnel.log4jLogLevel=DEBUG
transform.tunnel.classname=com.grb.impulse.plugins.SSHTunnel
transform.tunnel.log4jLogLevel=DEBUG
link.out.tunnel.onClientRead=tl1ManagerFramer.onData(SSHTunnel.ByteBuffer.inputBytes)
link.out.tunnel.onServerRead=tl1AgentFramer.onData(SSHTunnel.ByteBuffer.inputBytes)

transform.tl1AgentFramer.classname=com.grb.impulse.plugins.TL1AgentFramer
transform.tl1AgentFramer.log4jLogLevel=DEBUG
link.out.tl1AgentFramer.onTL1Message=tunnel.writeToClient(TL1AgentFramer.ByteBuffer.bytesTL1Message)

transform.tl1ManagerFramer.classname=com.grb.impulse.plugins.TL1ManagerFramer
transform.tl1ManagerFramer.log4jLogLevel=DEBUG
link.out.tl1ManagerFramer.onTL1Message=tl1CmdCodeMatcher.onTL1In(TL1ManagerFramer.TL1Message.tl1Message)

transform.tl1CmdCodeMatcher.classname=com.grb.impulse.plugins.TL1CmdCodeMatcher
transform.tl1CmdCodeMatcher.log4jLogLevel=DEBUG
transform.tl1CmdCodeMatcher.verb=ACT
transform.tl1CmdCodeMatcher.mod1=USER
link.out.tl1CmdCodeMatcher.onCmdCodeMatch=tunnel.writeToServer(TL1ManagerFramer.ByteBuffer.bytesTL1Message); counter.onData()
link.out.tl1CmdCodeMatcher.onNoCmdCodeMatch=tunnel.writeToServer(TL1ManagerFramer.ByteBuffer.bytesTL1Message)

transform.counter.classname=com.grb.impulse.plugins.Counter
transform.counter.match=1
transform.counter.globalCounter=true
transform.counter.log4jLogLevel=DEBUG
link.out.counter.onMatch=delayer.delayerIn()
# link.out.counter.onNoMatch=tunnel.writeToServer(Tunnel.ByteBuffer.inputBytes)

transform.delayer.classname=com.grb.impulse.plugins.TimeDelayer
transform.delayer.delayInMS=5000
transform.delayer.log4jLogLevel=DEBUG
link.out.delayer.delayerOut=tunnel.onClose()
