# This, given a verb and mod1, will initiate a connection disconnect after a delay

# To turn on debugging of all transforms
# transform.*.log4jLogLevel=DEBUG

# To turn on debugging for an individual transform
# transform.<name>.log4jLogLevel=DEBUG

impulse.byteArrayFormatterLimitSize=1024

transform.sshServer.classname=com.grb.impulse.plugins.SSHServer
transform.sshServer.listenPort=12346
transform.sshServer.hostKeyFilename=keys/host.ser
transform.sshServer.autoStart=true
link.out.sshServer.onNewConnection=tunnel.onNewConnection(SSHServer.SshServerClient.client)

# To run, the tunnel's serverIPPort property must be specified, you can
# 1. uncomment the property line below and insert your own ip address and port, or
# 2. specify -Dtransform.tunnel.serverIPPort=xxx.xxx.xxx.xxx:yyyyy on the command line
#transform.tunnel.serverIPPort=192.168.160.128:55555
#transform.tunnel.log4jLogLevel=DEBUG
transform.tunnel.classname=com.grb.impulse.plugins.SSHTunnel
transform.tunnel.log4jLogLevel=DEBUG
#link.out.tunnel.onClientRead=tunnel.writeToServer(SSHTunnel.ByteBuffer.inputBytes)
#link.out.tunnel.onServerRead=tunnel.writeToClient(SSHTunnel.ByteBuffer.inputBytes)
link.out.tunnel.onClientRead=cliManagerFramer.onData(SSHTunnel.ByteBuffer.inputBytes)
link.out.tunnel.onServerRead=cliAgentFramer.onData(SSHTunnel.ByteBuffer.inputBytes)

transform.cliAgentFramer.classname=com.grb.impulse.plugins.CLIAgentFramer
transform.cliAgentFramer.log4jLogLevel=DEBUG
transform.cliAgentFramer.prompts="\nLogin: ,\nPassword:,\nPV0028A# "
link.out.cliAgentFramer.onCLIMessage=cliResponseMatcher.onCLIIn()

transform.cliManagerFramer.classname=com.grb.impulse.plugins.CLIManagerFramer
transform.cliManagerFramer.log4jLogLevel=DEBUG
transform.cliManagerFramer.commandCompletionStrings=\r,?,\u0004
link.out.cliManagerFramer.onCLIMessage=cliCommandMatcher.onCLIIn(CLIManagerFramer.CLIMessage.cliMessage)

transform.cliCommandMatcher.classname=com.grb.impulse.plugins.CLICmdMatcher
transform.cliCommandMatcher.log4jLogLevel=DEBUG
transform.cliCommandMatcher.cmd1=graham
transform.cliCommandMatcher.cmd2=show
link.out.cliCommandMatcher.onCmdMatch=cliResponseMatcher.onSetMatch();tunnel.writeToServer(CLIManagerFramer.ByteBuffer.bytesCLIMessage)
link.out.cliCommandMatcher.onNoCmdMatch=cliResponseMatcher.onSetNoMatch();tunnel.writeToServer(CLIManagerFramer.ByteBuffer.bytesCLIMessage)

transform.cliResponseMatcher.classname=com.grb.impulse.plugins.CLIResponseMatcher
transform.cliResponseMatcher.log4jLogLevel=DEBUG
link.out.cliResponseMatcher.onRespMatch=tunnel.writeToClient(CLIAgentFramer.ByteBuffer.bytesCLIMessage);tunnel.onClose()
link.out.cliResponseMatcher.onNoRespMatch=tunnel.writeToClient(CLIAgentFramer.ByteBuffer.bytesCLIMessage)
