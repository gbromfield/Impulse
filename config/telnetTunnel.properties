# This tunnels TELNET traffic without doing anything to it

# To turn on debugging of all transforms
# transform.*.log4jLogLevel=DEBUG

impulse.byteArrayFormatterLimitSize=1024

# To turn on debugging for an individual transform
# transform.<name>.log4jLogLevel=DEBUG

transform.telnetServer.classname=com.grb.impulse.plugins.TelnetServer
transform.telnetServer.listenPort=12346
transform.telnetServer.autoStart=true
link.out.telnetServer.onNewConnection=tunnel.onNewConnection(TelnetServer.IoSession.client)

# To run, the tunnel's serverIPPort property must be specified, you can
# 1. uncomment the property line below and insert your own ip address and port, or
# 2. specify -Dtransform.tunnel.serverIPPort=xxx.xxx.xxx.xxx:yyyyy on the command line
transform.tunnel.classname=com.grb.impulse.plugins.TelnetTunnel
#transform.tunnel.serverIPPort=192.168.160.128:55555
#transform.tunnel.log4jLogLevel=DEBUG
link.out.tunnel.onClientDataRead=tunnel.writeToServer(TelnetTunnel.IoBuffer.inputBytes)
link.out.tunnel.onClientControlRead=tunnel.writeToServer(TelnetTunnel.IoBuffer.inputBytes)
link.out.tunnel.onServerDataRead=tunnel.writeToClient(TelnetTunnel.IoBuffer.inputBytes)
link.out.tunnel.onServerControlRead=tunnel.writeToClient(TelnetTunnel.IoBuffer.inputBytes)
