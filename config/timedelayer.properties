# Delays all messages from the client by 3 seconds before sending to the server

# To turn on debugging of all transforms
# transform.*.log4jLogLevel=DEBUG

# To turn on debugging for an individual transform
# transform.<name>.log4jLogLevel=DEBUG

transform.socketServer.classname=com.grb.impulse.plugins.SocketServer
transform.socketServer.listenPort=12346
transform.socketServer.autoStart=true
link.out.socketServer.onNewConnection=tunnel.onNewConnection(SocketServer.TCPTransportClient.client)

# To run, the tunnel's serverIPPort property must be specified, you can
# 1. uncomment the property line below and insert your own ip address and port, or
# 2. specify -Dtransform.tunnel.serverIPPort=xxx.xxx.xxx.xxx:yyyyy on the command line
transform.tunnel.classname=com.grb.impulse.plugins.Tunnel
#transform.tunnel.serverIPPort=192.168.160.128:55555

# clientCloneReadBuffer=true is important when delaying messages 
# because they use a timer thread to send after a timeout
# and the original ByteBuffer will be reused before that for the 
# next receive.
transform.tunnel.clientCloneReadBuffer=true
link.out.tunnel.onClientRead=delayer.delayerIn()
link.out.tunnel.onServerRead=tunnel.writeToClient(Tunnel.ByteBuffer.inputBytes)

transform.delayer.classname=com.grb.impulse.plugins.TimeDelayer
transform.delayer.delayInMS=3000
transform.delayer.log4jLogLevel=DEBUG
link.out.delayer.delayerOut=tunnel.writeToServer(Tunnel.ByteBuffer.inputBytes)
